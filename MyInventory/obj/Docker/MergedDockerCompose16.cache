name: dockercompose17340160031022439031
services:
  myinventory:
    build:
      context: D:\Project\dotnet\WebApplication\source\MyInventory\MyInventory
      dockerfile: MyInventory/Dockerfile
    depends_on:
      myinventorydatabase:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      database: MyInventory
      dbPassword: '@Tahmid000@#'
      dbServer: myinventorydatabase
      dbUserId: SA
    image: myinventory
    networks:
      myinventorydockernetwork: null
    ports:
      - mode: ingress
        target: 80
        published: "4001"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\radit\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\radit\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  myinventorydatabase:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: '@Tahmid000@#'
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      myinventorydockernetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "4002"
        protocol: tcp
networks:
  myinventorydockernetwork:
    name: dockercompose17340160031022439031_myinventorydockernetwork